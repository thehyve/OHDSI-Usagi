<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.ohdsi</groupId>
    <artifactId>usagi</artifactId>
    <version>1.5.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>usagi</name>
    <url>https://www.ohdsi.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <slf4j.version>2.0.17</slf4j.version>
        <skipTests>false</skipTests>
        <skipUnitTests>${skipTests}</skipUnitTests>
        <skipIntegrationTests>${skipTests}</skipIntegrationTests>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-core -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>4.10.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-queries -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queries</artifactId>
            <version>4.10.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-queryparser -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>4.10.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-analyzers-common -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
            <version>4.10.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sleepycat/je -->
        <dependency>
            <groupId>com.sleepycat</groupId>
            <artifactId>je</artifactId>
            <version>18.3.12</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.17</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-excelant -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-excelant</artifactId>
            <version>3.17</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-console</artifactId>
            <version>1.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.17.1</version>
            <scope>test</scope>
        </dependency>
        <!-- causes warning for CVE-2020-15250 but is only used in test scope -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-swing</artifactId>
            <version>3.17.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-swing-junit</artifactId>
            <version>3.17.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.caciocavallosilano</groupId>
            <artifactId>cacio-tta</artifactId>
            <version>1.18</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.21.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <mainClass>org.ohdsi.usagi.Launcher</mainClass>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <forkCount>1</forkCount>
                        <reuseForks>false</reuseForks>
                        <skipTests>${skipUnitTests}</skipTests>
                        <systemPropertyVariables>
                            <java.awt.headless>false</java.awt.headless>
                            <awt.toolkit>com.github.caciocavallosilano.cacio.ctc.CTCToolkit</awt.toolkit>
                            <java.awt.graphicsenv>com.github.caciocavallosilano.cacio.ctc.CTCGraphicsEnvironment</java.awt.graphicsenv>
                        </systemPropertyVariables>
                        <skipTests>${skipUnitTests}</skipTests>
                        <argLine>
                            -Doracle.jdbc.timezoneAsRegion=false
                            -XX:+EnableDynamicAgentLoading
                            <!-- Line(s) below are needed to keep TestSourceDataScan.updateEnv() working in java 17+
                                 This is considered an acceptable hack since it only affects test code -->
                            --add-exports=java.base/java.util=ALL-UNNAMED
                            --add-opens=java.base/java.util=ALL-UNNAMED
                            <!-- suppress exceptions from cacio-tta, see https://github.com/CaciocavalloSilano/caciocavallo -->
                            --add-opens java.base/java.lang.reflect=ALL-UNNAMED
                            --add-exports java.base/java.lang.reflect=ALL-UNNAMED
                            --add-exports=java.desktop/java.awt=ALL-UNNAMED
                            --add-exports=java.desktop/java.awt.peer=ALL-UNNAMED
                            --add-exports=java.desktop/sun.awt.image=ALL-UNNAMED
                            --add-exports=java.desktop/sun.java2d=ALL-UNNAMED
                            --add-exports=java.desktop/java.awt.dnd.peer=ALL-UNNAMED
                            --add-exports=java.desktop/sun.awt=ALL-UNNAMED
                            --add-exports=java.desktop/sun.awt.event=ALL-UNNAMED
                            --add-exports=java.desktop/sun.awt.datatransfer=ALL-UNNAMED
                            --add-exports=java.base/sun.security.action=ALL-UNNAMED
                            --add-opens=java.base/java.util=ALL-UNNAMED
                            --add-opens=java.desktop/java.awt=ALL-UNNAMED
                            --add-opens=java.desktop/sun.java2d=ALL-UNNAMED
                            --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                            --add-opens java.base/java.lang=ALL-UNNAMED
                        </argLine>
                    </configuration>
                    <!--dependencies>
                        <dependency>
                            <groupId>org.junit.jupiter</groupId>
                            <artifactId>junit-jupiter-api</artifactId>
                            <version>5.13.1</version>
                        </dependency>
                        <dependency>
                            <groupId>org.junit.vintage</groupId>
                            <artifactId>junit-vintage-engine</artifactId>
                            <version>5.13.1</version>
                        </dependency>
                    </dependencies-->
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <!-- The maven-shade-plugin takes care of building the fat jar for distribution -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>shade-main</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <outputFile>dist/Usagi.jar</outputFile>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/LICENSE</exclude>
                                        <exclude>META-INF/LICENSE.txt</exclude>
                                        <exclude>META-INF/NOTICE</exclude>
                                        <exclude>META-INF/NOTICE.txt</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>org.apache.lucene:lucene-sandbox</artifact>
                                    <excludes>
                                        <exclude>META-INF/services/org.apache.lucene.codecs.PostingsFormat</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>org.ohdsi.usagi:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.MF</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                <mainClass>
                                    org.ohdsi.usagi.Launcher
                                </mainClass>
                            </transformer>
                            <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                                <resource>MANIFEST.MF</resource>
                            </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- the maven-assembly-plugin takes care of building a fat jar that executes a smoke test for
                     RabbitInAHat (also uses src/main/assembly/assembly.xml)
                     The main objective is to establish that the distributed jar is complete with all
                     dependencies -->
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>Usagi-test</finalName>
                            <archive>
                                <manifest>
                                    <mainClass>org.ohdsi.usagi.TestLauncher</mainClass>
                                </manifest>
                            </archive>
                            <appendAssemblyId>false</appendAssemblyId>
                            <attach>false</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <systemPropertyVariables>
                        <propertyName>propertyValue</propertyName>
                        <projectBuildDirectory>${project.build.directory}</projectBuildDirectory>
                        <java.awt.headless>false</java.awt.headless>
                    </systemPropertyVariables>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <includes>
                        <include>**/*IT.java</include>
                        <include>**/IT*.java</include>
                    </includes>
                    <skipTests>${skipIntegrationTests}</skipTests>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>dist</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>failed-gui-tests</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
	    <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>11.1.0</version>
                <configuration>
                    <failBuildOnCVSS>8</failBuildOnCVSS>
                    <suppressionFiles>
                        <!--suppressionFile>http://example.org/suppression.xml</suppressionFile-->
                        <suppressionFile>project-suppression.xml</suppressionFile>
                    </suppressionFiles>
                </configuration>
                <executions>
                    <execution>
                        <!-- Should only be run manually as it has a dependency on the .net sdk -->
                        <phase>none</phase> <!-- only run on demand -->
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>
